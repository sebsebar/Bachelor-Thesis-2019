geom_point(size = 1) +
scale_color_manual(values=c("#AA0000","#ff8383","#2C5AA0","#99b7e3","#FFF0B5"))+
labs(x = "Valence", y = "Arousal") +
geom_hline(aes(yintercept = 5)) +
geom_vline(aes(xintercept = 5)) +
scale_x_continuous(breaks = c(1,2,3,4,5,6,7,8,9), limits=c(1,9)) +
scale_y_continuous(breaks = c(1,2,3,4,5,6,7,8,9), limits=c(1,9)) +
theme_bw() +
stat_ellipse() +
scale_fill_manual(values = c('#999999','#E69F00'))+
theme(legend.position = "none") +
theme(axis.title.x = element_text(size=12, face="bold"),axis.text.x = element_text(face = "bold", size = 12),axis.text.y = element_text(face = "bold", size = 12),axis.title.y = element_text(size=12, face="bold"))
xdensity <- axis_canvas(PAV, axis = "x")+
geom_density(data = total, aes(Valence_Mean_Pavlovia, fill=Valence_cutoff),alpha=.5)+
theme(legend.position = "none",axis.title.x = element_blank(),axis.title.y = element_blank())+
scale_fill_manual(values=c("#AA0000","#2C5AA0"))
ydensity <- axis_canvas(PAV, axis = "y", coord_flip = TRUE)+
geom_density(data=total, aes(Arousal_Mean_Pavlovia, fill=Arousal_cutoff),alpha=.5) +
theme(legend.position = "none",axis.title.x = element_blank(),axis.title.y = element_blank())+
coord_flip()+
scale_fill_manual(values=c("#272727","#A4A4A4"))
p <- insert_xaxis_grob(PAV, xdensity, grid::unit(.2, "null"), position = "top")
pp<- insert_yaxis_grob(p, ydensity, grid::unit(.2, "null"), position = "right")
P1 <- ggdraw(pp)
P1
ANEW <- ggplot(total, aes(x = Valence_Mean_ANEW, y = Arousal_Mean_ANEW, colour=Val_Aro_ANEW)) +
geom_point(size = 1)+
scale_color_manual(values=c("#AA0000","#ff8383","#2C5AA0","#99b7e3","#FFF0B5"))+
labs(x = "Valence", y = "Arousal") + geom_hline(aes(yintercept = 5)) +
geom_vline(aes(xintercept = 5)) +
scale_x_continuous(breaks = c(1,2,3,4,5,6,7,8,9), limits=c(1,9)) +
scale_y_continuous(breaks = c(1,2,3,4,5,6,7,8,9), limits=c(1,9)) +
theme_bw()+
stat_ellipse() +
scale_fill_manual(values = c('#999999','#E69F00'))+
theme(legend.position = "none") +
theme(axis.title.x = element_text(size=12, face="bold"),axis.text.x = element_text(face = "bold", size = 12),axis.text.y = element_text(face = "bold", size = 12),axis.title.y = element_text(size=12, face="bold"))
xdensity2 <- axis_canvas(ANEW, axis = "x")+
geom_density(data = total, aes(Valence_Mean_ANEW, fill=Valence_cutoff),alpha=.5)+
theme(legend.position = "none",axis.title.x = element_blank(),axis.title.y = element_blank())+
scale_fill_manual(values=c("#AA0000","#2C5AA0"))
ydensity2 <- axis_canvas(ANEW, axis = "y", coord_flip = TRUE)+
geom_density(data=total, aes(Arousal_Mean_ANEW, fill=Arousal_cutoff),alpha=.5) +
theme(legend.position = "none",axis.title.x = element_blank(),axis.title.y = element_blank())+
coord_flip()+
scale_fill_manual(values=c("#272727","#A4A4A4"))
p1 <- insert_xaxis_grob(ANEW, xdensity2, grid::unit(.2, "null"), position = "top")
p2<- insert_yaxis_grob(p1, ydensity2, grid::unit(.2, "null"), position = "right")
P2 <- ggdraw(p2)
P2
Cor_Aro <- as.data.frame(t(select(total,Word,Arousal_Mean_Pavlovia,Arousal_Mean_ANEW)))
# change the format of the dataframe
colnames(Cor_Aro) <- as.character(unlist(Cor_Aro[1,]))
# remove the list row, so that the word is not repeated
Cor_Aro = Cor_Aro[-1, ]
# transform back to dataframe
Cor_Aro <- as.data.frame(t(Cor_Aro))
Cor_Val <- as.data.frame(t(select(total,Word,Valence_Mean_Pavlovia,Valence_Mean_ANEW)))
colnames(Cor_Val) <- as.character(unlist(Cor_Val[1,]))
Cor_Val = Cor_Val[-1, ]
Cor_Val <- as.data.frame(t(Cor_Val))
# Calculating the combined rating for arousal and valence
Cor_Aro$Arousal_Combined <- Cor_Aro$Arousal_Mean_Pavlovia+Cor_Aro$Arousal_Mean_ANEW
Cor_Val$Valence_Combined <- Cor_Val$Valence_Mean_Pavlovia+Cor_Val$Valence_Mean_ANEW
View(Cor_Aro)
Cor_Aro$Arousal_Mean_Pavlovia <- as.numeric(Cor_Aro$Arousal_Mean_Pavlovia)
Cor_Arol$Arousal_Mean_ANEW <- as.numeric(Cor_Aro$Arousal_Mean_ANEW)
Cor_Val$Valence_Mean_ANEW <- as.numeric(Cor_Val$Valence_Mean_ANEW)
Cor_Val$Valence_Mean_Pavlovia <- as.numeric(Cor_Val$Valence_Mean_Pavlovia)
Cor_Aro$Arousal_Mean_ANEW <- as.numeric(Cor_Aro$Arousal_Mean_ANEW)
Cor_Aro$Arousal_Combined <- Cor_Aro$Arousal_Mean_Pavlovia+Cor_Aro$Arousal_Mean_ANEW
Cor_Val$Valence_Combined <- Cor_Val$Valence_Mean_Pavlovia+Cor_Val$Valence_Mean_ANEW
Cor_Arousal<-cor.test(total$Arousal_Mean_Pavlovia,total$Arousal_Mean_ANEW, method = "spearman", exact=F)
Cor_Arousal
Cor_Valence<-cor.test(total$Valence_Mean_Pavlovia,total$Valence_Mean_ANEW, method = "spearman", exact=F)
Cor_Valence
P3 <- ggplot(Cor_Aro, aes(x=Arousal_Mean_Pavlovia, y=Arousal_Mean_ANEW,col=Arousal_Combined))+
geom_point(size = 1)+
geom_abline(intercept = 0, slope = 1,colour="red",size=1)+
scale_x_continuous(breaks = c(1,2,3,4,5,6,7,8,9), limits=c(1,9)) +
scale_y_continuous(breaks = c(1,2,3,4,5,6,7,8,9), limits=c(1,9)) +
theme_bw()+
labs(title = "", x = "Mean Arousal Rating: Pavlovia", y = "Mean Arousal Rating: ANEW") +
annotate("text", x = 3, y = 8.5, label = "Spearman Correlation",size=3, fontface="bold")+
annotate("text", x = 3, y = 8, label = "rho = 0.7669351",size=3, fontface="bold") +
annotate("text", x = 3, y = 7.5, label = "P-value = 2.2e-16",size=3, fontface="bold") +
scale_color_gradient(low="#999999", high="#333333")+
theme(legend.position = "none")+
theme(axis.title.x = element_text(size=12, face="bold"),axis.text.x = element_text(face = "bold", size = 12),axis.text.y = element_text(face = "bold", size = 12),axis.title.y = element_text(size=12, face="bold"),panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
P4 <- ggplot(Cor_Val, aes(x=Valence_Mean_Pavlovia, y=Valence_Mean_ANEW,col=Valence_Combined))+
geom_point(size = 1) +
geom_abline(intercept = 0, slope = 1,colour="red",size=1)+
scale_x_continuous(breaks = c(1,2,3,4,5,6,7,8,9), limits=c(1,9)) +
scale_y_continuous(breaks = c(1,2,3,4,5,6,7,8,9), limits=c(1,9)) +
theme_bw()+
labs(title = "",x = "Mean Valence Rating: Pavlovia", y = "Mean Valence Rating: ANEW") +
annotate("text", x = 3, y = 8.5, label = "Spearman Correlation",size=3, fontface="bold")+
annotate("text", x = 3, y = 8, label = "rho = 0.9316756",size=3, fontface="bold") +
annotate("text", x = 3, y = 7.5, label = "P-value = 2.2e-16",size=3, fontface="bold") +
scale_color_gradient(low="#336699", high="#990000")+
theme(legend.position = "none") +
theme(axis.title.x = element_text(size=12, face="bold"),axis.text.x = element_text(face = "bold", size = 12),axis.text.y = element_text(face = "bold", size = 12),axis.title.y = element_text(size=12, face="bold"),panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
plot_grid(P2,P1,P3,P4, labels = c('A. ANEW word ratings', 'B. Pavlovia word ratings','C. Rating Consistency Arousal', 'D. Rating Consistency Valence'), hjust = 0.0,label_size = 16)
View(Cor_Val)
P3 <- ggplot(Cor_Aro, aes(x=Arousal_Mean_Pavlovia, y=Arousal_Mean_ANEW,col=Arousal_Combined))+
geom_point(size = 1)+
geom_abline(intercept = 0, slope = 1,colour="red",size=1)+
scale_x_continuous(breaks = c(1,2,3,4,5,6,7,8,9), limits=c(1,9)) +
scale_y_continuous(breaks = c(1,2,3,4,5,6,7,8,9), limits=c(1,9)) +
theme_bw()+
labs(title = "", x = "Mean Arousal Rating: Pavlovia", y = "Mean Arousal Rating: ANEW") +
annotate("text", x = 3, y = 8.5, label = "Spearman Correlation",size=3, fontface="bold")+
annotate("text", x = 3, y = 8, label = "rho = 0.7669351",size=3, fontface="bold") +
annotate("text", x = 3, y = 7.5, label = "P-value = 2.2e-16",size=3, fontface="bold") +
scale_color_gradient(low="#999999", high="#333333")+
theme(legend.position = "none")+
theme(axis.title.x = element_text(size=12, face="bold"),axis.text.x = element_text(face = "bold", size = 12),axis.text.y = element_text(face = "bold", size = 12),axis.title.y = element_text(size=12, face="bold"),panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
P3
pacman::p_load("gridExtra","grid","ggplot2","lattice","tidyverse","plyr", "ggpubr","cowplot")
###############################################
# ---------------- ANEW DATA -----------------#
###############################################
# set absolute working directory
abs_dic <- dirname(rstudioapi::getSourceEditorContext()$path)
setwd(abs_dic)
# set working directory to data folder
setwd("./ANEW_Data")
# ---- Load and clean ANEW data
ANEW_data <- read.delim("ANEW2017All.txt", header=TRUE)
ANEW_data$ValSD <- gsub("[()]", "", ANEW_data$ValSD)
ANEW_data$AroSD <- gsub("[()]", "", ANEW_data$ValSD)
ANEW_data$DomSD <- gsub("[()]", "", ANEW_data$DomSD)
# ----- Make new categories (high and low) for Valence and Arousal
quantile(ANEW_data$ValMn, c(.40, .50, .60))
quantile(ANEW_data$AroMn, c(.40, .50, .60))
# set cut-offs based on the quantiles just calculated
cuthigh <- 5.4
cutlow <- 4.6
# using the cut-offs to make four new categories for the new variable Val_Aro
# also omitting words with valence and arousal values below cuthigh and above cutlow
Val_Aro <- ifelse(ANEW_data$ValMn >= cuthigh & ANEW_data$AroMn >= cuthigh, 'ValHighAroHigh',
ifelse(ANEW_data$ValMn >= cuthigh & ANEW_data$AroMn <= cutlow, 'ValHighAroLow',
ifelse(ANEW_data$ValMn <= cutlow & ANEW_data$AroMn >= cuthigh, 'ValLowAroHigh',
ifelse(ANEW_data$ValMn <= cutlow & ANEW_data$AroMn <= cutlow, 'ValLowAroLow',
'0'))))
ANEW_data <- cbind(ANEW_data,Val_Aro)
###################################################
# ---------------- PAVLOVIA DATA -----------------#
###################################################
# set absolute working directory
setwd(abs_dic)
# set working directory to data folder
setwd("./Pavlovia_Data/Pavlovia_Completed")
# make a list of names in directory
pav_filenames = list.files(pattern = "PARTIC*") #list of filenames from WD
# make empty dataframe to load the list of files
Pav_data = data.frame()
# load Pavlovia data
for (i in pav_filenames){ #loop over list of files
#import the current file
Pav <- read.delim(i,header=TRUE,sep = ",")
Pav <- select(Pav,A_key_resp.keys, key_resp.keys,word, ParticipantID)
Pav_data <- rbind(Pav_data,Pav)
}
# add headers to column 1 and 2
names(Pav_data)[1] <- "Arousal"
names(Pav_data)[2] <- "Valence"
Pav_data <- filter(Pav_data, ParticipantID != 1116 & ParticipantID != 11114&ParticipantID != 11116&ParticipantID != 11124&ParticipantID != 11128&ParticipantID != 11129)
unique(Pav_data$ParticipantID)
# make mean values for each word to make it comparable to the ANEW data
Means <- data_frame()
for (i in unique(Pav_data$word)){ #loop over list of files
test <- filter(Pav_data, word == i)
test$Arousal_mean <- mean(test$Arousal)
test$Valence_mean <- mean(test$Valence)
test <- select(test,word,Arousal_mean,Valence_mean)
Means <- rbind(Means,test)
}
Means <- Means%>%
distinct(word, .keep_all = TRUE)
Pav_data <- Means
names(Pav_data)[1] <- "Word"
total <- merge(Pav_data,ANEW_data,by="Word")
names(total)[names(total) == "Val_and_Aro"] <- "Val_Aro_Pav"
names(total)[names(total) == "Val_Aro"] <- "Val_Aro_ANEW"
names(total)[names(total) == "Arousal_mean"] <- "Arousal_Mean_Pavlovia"
names(total)[names(total) == "Valence_mean"] <- "Valence_Mean_Pavlovia"
names(total)[names(total) == "ValMn"] <- "Valence_Mean_ANEW"
names(total)[names(total) == "AroMn"] <- "Arousal_Mean_ANEW"
total$Arousal_cutoff <- (ifelse(total$Val_Aro_ANEW == 'ValHighAroHigh', 'High', ifelse(total$Val_Aro_ANEW == 'ValLowAroHigh', 'High','Low')))
total$Valence_cutoff <- (ifelse(total$Val_Aro_ANEW == 'ValHighAroHigh', 'High', ifelse(total$Val_Aro_ANEW == 'ValHighAroLow', 'High','Low')))
PAV <- ggplot(total, aes(x = Valence_Mean_Pavlovia, y = Arousal_Mean_Pavlovia, colour=Val_Aro_ANEW)) +
geom_point(size = 1) +
scale_color_manual(values=c("#AA0000","#ff8383","#2C5AA0","#99b7e3","#FFF0B5"))+
labs(x = "Valence", y = "Arousal") +
geom_hline(aes(yintercept = 5)) +
geom_vline(aes(xintercept = 5)) +
scale_x_continuous(breaks = c(1,2,3,4,5,6,7,8,9), limits=c(1,9)) +
scale_y_continuous(breaks = c(1,2,3,4,5,6,7,8,9), limits=c(1,9)) +
theme_bw() +
stat_ellipse() +
scale_fill_manual(values = c('#999999','#E69F00'))+
theme(legend.position = "none") +
theme(axis.title.x = element_text(size=12, face="bold"),axis.text.x = element_text(face = "bold", size = 12),axis.text.y = element_text(face = "bold", size = 12),axis.title.y = element_text(size=12, face="bold"))
# Marginal density plot of x (top panel)
xdensity <- axis_canvas(PAV, axis = "x")+
geom_density(data = total, aes(Valence_Mean_Pavlovia, fill=Valence_cutoff),alpha=.5)+
theme(legend.position = "none",axis.title.x = element_blank(),axis.title.y = element_blank())+
scale_fill_manual(values=c("#AA0000","#2C5AA0"))
# Marginal density plot of y (right panel)
ydensity <- axis_canvas(PAV, axis = "y", coord_flip = TRUE)+
geom_density(data=total, aes(Arousal_Mean_Pavlovia, fill=Arousal_cutoff),alpha=.5) +
theme(legend.position = "none",axis.title.x = element_blank(),axis.title.y = element_blank())+
coord_flip()+
scale_fill_manual(values=c("#272727","#A4A4A4"))
p <- insert_xaxis_grob(PAV, xdensity, grid::unit(.2, "null"), position = "top")
pp<- insert_yaxis_grob(p, ydensity, grid::unit(.2, "null"), position = "right")
P1 <- ggdraw(pp)
P1
ANEW <- ggplot(total, aes(x = Valence_Mean_ANEW, y = Arousal_Mean_ANEW, colour=Val_Aro_ANEW)) +
geom_point(size = 1)+
scale_color_manual(values=c("#AA0000","#ff8383","#2C5AA0","#99b7e3","#FFF0B5"))+
labs(x = "Valence", y = "Arousal") + geom_hline(aes(yintercept = 5)) +
geom_vline(aes(xintercept = 5)) +
scale_x_continuous(breaks = c(1,2,3,4,5,6,7,8,9), limits=c(1,9)) +
scale_y_continuous(breaks = c(1,2,3,4,5,6,7,8,9), limits=c(1,9)) +
theme_bw()+
stat_ellipse() +
scale_fill_manual(values = c('#999999','#E69F00'))+
theme(legend.position = "none") +
theme(axis.title.x = element_text(size=12, face="bold"),axis.text.x = element_text(face = "bold", size = 12),axis.text.y = element_text(face = "bold", size = 12),axis.title.y = element_text(size=12, face="bold"))
# Marginal density plot of x (top panel)
xdensity2 <- axis_canvas(ANEW, axis = "x")+
geom_density(data = total, aes(Valence_Mean_ANEW, fill=Valence_cutoff),alpha=.5)+
theme(legend.position = "none",axis.title.x = element_blank(),axis.title.y = element_blank())+
scale_fill_manual(values=c("#AA0000","#2C5AA0"))
# Marginal density plot of y (right panel)
ydensity2 <- axis_canvas(ANEW, axis = "y", coord_flip = TRUE)+
geom_density(data=total, aes(Arousal_Mean_ANEW, fill=Arousal_cutoff),alpha=.5) +
theme(legend.position = "none",axis.title.x = element_blank(),axis.title.y = element_blank())+
coord_flip()+
scale_fill_manual(values=c("#272727","#A4A4A4"))
p1 <- insert_xaxis_grob(ANEW, xdensity2, grid::unit(.2, "null"), position = "top")
p2<- insert_yaxis_grob(p1, ydensity2, grid::unit(.2, "null"), position = "right")
P2 <- ggdraw(p2)
P2
total$Arousal_Mean_Pavlovia <- as.numeric(total$Arousal_Mean_Pavlovia)
total$Valence_Mean_Pavlovia <- as.numeric(total$Valence_Mean_Pavlovia)
total$Valence_Mean_ANEW <- as.numeric(total$Valence_Mean_ANEW)
total$Arousal_Mean_ANEW <- as.numeric(total$Arousal_Mean_ANEW)
Cor_Aro <- as.data.frame(t(select(total,Word,Arousal_Mean_Pavlovia,Arousal_Mean_ANEW)))
# change the format of the dataframe
colnames(Cor_Aro) <- as.character(unlist(Cor_Aro[1,]))
# remove the list row, so that the word is not repeated
Cor_Aro = Cor_Aro[-1, ]
# transform back to dataframe
Cor_Aro <- as.data.frame(t(Cor_Aro))
View(Cor_Aro)
Cor_Aro$Arousal_Mean_Pavlovia <- as.numeric(sub(",", ".", Cor_Aro$Arousal_Mean_Pavlovia,fixed = TRUE))
Cor_Aro$Arousal_Mean_ANEW <- as.numeric(sub(",", ".",Cor_Aro$Arousal_Mean_ANEW,fixed = TRUE))
Cor_Val <- as.data.frame(t(select(total,Word,Valence_Mean_Pavlovia,Valence_Mean_ANEW)))
colnames(Cor_Val) <- as.character(unlist(Cor_Val[1,]))
Cor_Val = Cor_Val[-1, ]
Cor_Val <- as.data.frame(t(Cor_Val))
Cor_Val$Valence_Mean_Pavlovia <- as.numeric(sub(",", ".",Cor_Val$Valence_Mean_Pavlovia,fixed = TRUE))
Cor_Val$Valence_Mean_ANEW <- as.numeric(sub(",", ".",Cor_Val$Valence_Mean_ANEW,fixed = TRUE))
Cor_Arousal<-cor.test(CorData$Arousal_Mean_Pavlovia,CorData$Arousal_Mean_ANEW, method = "spearman", exact=F)
Cor_Arousal
Cor_Valence<-cor.test(CorData$Valence_Mean_Pavlovia,CorData$Valence_Mean_ANEW, method = "spearman", exact=F)
Cor_Valence
Cor_Aro$Arousal_Combined <- Cor_Aro$Arousal_Mean_Pavlovia+Cor_Aro$Arousal_Mean_ANEW
Cor_Val$Valence_Combined <- Cor_Val$Valence_Mean_Pavlovia+Cor_Val$Valence_Mean_ANEW
P3 <- ggplot(Cor_Aro, aes(x=Arousal_Mean_Pavlovia, y=Arousal_Mean_ANEW,col=Arousal_Combined))+
geom_point(size = 1)+
geom_abline(intercept = 0, slope = 1,colour="red",size=1)+
scale_x_continuous(breaks = c(1,2,3,4,5,6,7,8,9), limits=c(1,9)) +
scale_y_continuous(breaks = c(1,2,3,4,5,6,7,8,9), limits=c(1,9)) +
theme_bw()+
labs(title = "", x = "Mean Arousal Rating: Pavlovia", y = "Mean Arousal Rating: ANEW") +
annotate("text", x = 3, y = 8.5, label = "Spearman Correlation",size=3, fontface="bold")+
annotate("text", x = 3, y = 8, label = "rho = 0.7669351",size=3, fontface="bold") +
annotate("text", x = 3, y = 7.5, label = "P-value = 2.2e-16",size=3, fontface="bold") +
scale_color_gradient(low="#999999", high="#333333")+
theme(legend.position = "none")+
theme(axis.title.x = element_text(size=12, face="bold"),axis.text.x = element_text(face = "bold", size = 12),axis.text.y = element_text(face = "bold", size = 12),axis.title.y = element_text(size=12, face="bold"),panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
P4 <- ggplot(Cor_Val, aes(x=Valence_Mean_Pavlovia, y=Valence_Mean_ANEW,col=Valence_Combined))+
geom_point(size = 1) +
geom_abline(intercept = 0, slope = 1,colour="red",size=1)+
scale_x_continuous(breaks = c(1,2,3,4,5,6,7,8,9), limits=c(1,9)) +
scale_y_continuous(breaks = c(1,2,3,4,5,6,7,8,9), limits=c(1,9)) +
theme_bw()+
labs(title = "",x = "Mean Valence Rating: Pavlovia", y = "Mean Valence Rating: ANEW") +
annotate("text", x = 3, y = 8.5, label = "Spearman Correlation",size=3, fontface="bold")+
annotate("text", x = 3, y = 8, label = "rho = 0.9316756",size=3, fontface="bold") +
annotate("text", x = 3, y = 7.5, label = "P-value = 2.2e-16",size=3, fontface="bold") +
scale_color_gradient(low="#336699", high="#990000")+
theme(legend.position = "none") +
theme(axis.title.x = element_text(size=12, face="bold"),axis.text.x = element_text(face = "bold", size = 12),axis.text.y = element_text(face = "bold", size = 12),axis.title.y = element_text(size=12, face="bold"),panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
plot_grid(P2,P1,P3,P4, labels = c('A. ANEW word ratings', 'B. Pavlovia word ratings','C. Rating Consistency Arousal', 'D. Rating Consistency Valence'), hjust = 0.0,label_size = 16)
pacman::p_load("gridExtra","grid","ggplot2","lattice","tidyverse","plyr", "ggpubr","cowplot")
###############################################
# ---------------- ANEW DATA -----------------#
###############################################
# set absolute working directory
abs_dic <- dirname(rstudioapi::getSourceEditorContext()$path)
setwd(abs_dic)
# set working directory to data folder
setwd("./ANEW_Data")
# ---- Load and clean ANEW data
ANEW_data <- read.delim("ANEW2017All.txt", header=TRUE)
ANEW_data$ValSD <- gsub("[()]", "", ANEW_data$ValSD)
ANEW_data$AroSD <- gsub("[()]", "", ANEW_data$ValSD)
ANEW_data$DomSD <- gsub("[()]", "", ANEW_data$DomSD)
# ----- Make new categories (high and low) for Valence and Arousal
quantile(ANEW_data$ValMn, c(.40, .50, .60))
quantile(ANEW_data$AroMn, c(.40, .50, .60))
# set cut-offs based on the quantiles just calculated
cuthigh <- 5.4
cutlow <- 4.6
# using the cut-offs to make four new categories for the new variable Val_Aro
# also omitting words with valence and arousal values below cuthigh and above cutlow
Val_Aro <- ifelse(ANEW_data$ValMn >= cuthigh & ANEW_data$AroMn >= cuthigh, 'ValHighAroHigh',
ifelse(ANEW_data$ValMn >= cuthigh & ANEW_data$AroMn <= cutlow, 'ValHighAroLow',
ifelse(ANEW_data$ValMn <= cutlow & ANEW_data$AroMn >= cuthigh, 'ValLowAroHigh',
ifelse(ANEW_data$ValMn <= cutlow & ANEW_data$AroMn <= cutlow, 'ValLowAroLow',
'0'))))
ANEW_data <- cbind(ANEW_data,Val_Aro)
###################################################
# ---------------- PAVLOVIA DATA -----------------#
###################################################
# set absolute working directory
setwd(abs_dic)
# set working directory to data folder
setwd("./Pavlovia_Data/Pavlovia_Completed")
# make a list of names in directory
pav_filenames = list.files(pattern = "PARTIC*") #list of filenames from WD
# make empty dataframe to load the list of files
Pav_data = data.frame()
# load Pavlovia data
for (i in pav_filenames){ #loop over list of files
#import the current file
Pav <- read.delim(i,header=TRUE,sep = ",")
Pav <- select(Pav,A_key_resp.keys, key_resp.keys,word, ParticipantID)
Pav_data <- rbind(Pav_data,Pav)
}
# add headers to column 1 and 2
names(Pav_data)[1] <- "Arousal"
names(Pav_data)[2] <- "Valence"
# finding Outliers (Using boxplots to find participants who didn't use the scale)
ggplot(Pav_data, aes(y = Arousal))+ facet_grid(~ ParticipantID) + geom_boxplot()
ggplot(Pav_data, aes(y = Valence))+ facet_grid(~ ParticipantID) + geom_boxplot()
# discarding neutral "flatliners" with almost all ratings as 5
Pav_data <- filter(Pav_data, ParticipantID != 1116 & ParticipantID != 11114&ParticipantID != 11116&ParticipantID != 11124&ParticipantID != 11128&ParticipantID != 11129)
unique(Pav_data$ParticipantID)
# make mean values for each word to make it comparable to the ANEW data
Means <- data_frame()
for (i in unique(Pav_data$word)){ #loop over list of files
test <- filter(Pav_data, word == i)
test$Arousal_mean <- mean(test$Arousal)
test$Valence_mean <- mean(test$Valence)
test <- select(test,word,Arousal_mean,Valence_mean)
Means <- rbind(Means,test)
}
Means <- Means%>%
distinct(word, .keep_all = TRUE)
Pav_data <- Means
##################################################################
# --------------- Pavlovia Data with ANEW Categories ----------- #
##################################################################
#Merging ANEW and Pavlovia, assigning headers
names(Pav_data)[1] <- "Word"
total <- merge(Pav_data,ANEW_data,by="Word")
names(total)[names(total) == "Val_and_Aro"] <- "Val_Aro_Pav"
names(total)[names(total) == "Val_Aro"] <- "Val_Aro_ANEW"
names(total)[names(total) == "Arousal_mean"] <- "Arousal_Mean_Pavlovia"
names(total)[names(total) == "Valence_mean"] <- "Valence_Mean_Pavlovia"
names(total)[names(total) == "ValMn"] <- "Valence_Mean_ANEW"
names(total)[names(total) == "AroMn"] <- "Arousal_Mean_ANEW"
#Making new binned variables for Arousal and Valence using ANEW
total$Arousal_cutoff <- (ifelse(total$Val_Aro_ANEW == 'ValHighAroHigh', 'High', ifelse(total$Val_Aro_ANEW == 'ValLowAroHigh', 'High','Low')))
total$Valence_cutoff <- (ifelse(total$Val_Aro_ANEW == 'ValHighAroHigh', 'High', ifelse(total$Val_Aro_ANEW == 'ValHighAroLow', 'High','Low')))
##################################################################
# --------------- Plotting Word Selection Plots ---------------- #
##################################################################
# Plot for the Pavlovia data
PAV <- ggplot(total, aes(x = Valence_Mean_Pavlovia, y = Arousal_Mean_Pavlovia, colour=Val_Aro_ANEW)) +
geom_point(size = 1) +
scale_color_manual(values=c("#AA0000","#ff8383","#2C5AA0","#99b7e3","#FFF0B5"))+
labs(x = "Valence", y = "Arousal") +
geom_hline(aes(yintercept = 5)) +
geom_vline(aes(xintercept = 5)) +
scale_x_continuous(breaks = c(1,2,3,4,5,6,7,8,9), limits=c(1,9)) +
scale_y_continuous(breaks = c(1,2,3,4,5,6,7,8,9), limits=c(1,9)) +
theme_bw() +
stat_ellipse() +
scale_fill_manual(values = c('#999999','#E69F00'))+
theme(legend.position = "none") +
theme(axis.title.x = element_text(size=12, face="bold"),axis.text.x = element_text(face = "bold", size = 12),axis.text.y = element_text(face = "bold", size = 12),axis.title.y = element_text(size=12, face="bold"))
# Marginal density plot of x (top panel)
xdensity <- axis_canvas(PAV, axis = "x")+
geom_density(data = total, aes(Valence_Mean_Pavlovia, fill=Valence_cutoff),alpha=.5)+
theme(legend.position = "none",axis.title.x = element_blank(),axis.title.y = element_blank())+
scale_fill_manual(values=c("#AA0000","#2C5AA0"))
# Marginal density plot of y (right panel)
ydensity <- axis_canvas(PAV, axis = "y", coord_flip = TRUE)+
geom_density(data=total, aes(Arousal_Mean_Pavlovia, fill=Arousal_cutoff),alpha=.5) +
theme(legend.position = "none",axis.title.x = element_blank(),axis.title.y = element_blank())+
coord_flip()+
scale_fill_manual(values=c("#272727","#A4A4A4"))
p <- insert_xaxis_grob(PAV, xdensity, grid::unit(.2, "null"), position = "top")
pp<- insert_yaxis_grob(p, ydensity, grid::unit(.2, "null"), position = "right")
P1 <- ggdraw(pp)
# Plot for the ANEW data
ANEW <- ggplot(total, aes(x = Valence_Mean_ANEW, y = Arousal_Mean_ANEW, colour=Val_Aro_ANEW)) +
geom_point(size = 1)+
scale_color_manual(values=c("#AA0000","#ff8383","#2C5AA0","#99b7e3","#FFF0B5"))+
labs(x = "Valence", y = "Arousal") + geom_hline(aes(yintercept = 5)) +
geom_vline(aes(xintercept = 5)) +
scale_x_continuous(breaks = c(1,2,3,4,5,6,7,8,9), limits=c(1,9)) +
scale_y_continuous(breaks = c(1,2,3,4,5,6,7,8,9), limits=c(1,9)) +
theme_bw()+
stat_ellipse() +
scale_fill_manual(values = c('#999999','#E69F00'))+
theme(legend.position = "none") +
theme(axis.title.x = element_text(size=12, face="bold"),axis.text.x = element_text(face = "bold", size = 12),axis.text.y = element_text(face = "bold", size = 12),axis.title.y = element_text(size=12, face="bold"))
# Marginal density plot of x (top panel)
xdensity2 <- axis_canvas(ANEW, axis = "x")+
geom_density(data = total, aes(Valence_Mean_ANEW, fill=Valence_cutoff),alpha=.5)+
theme(legend.position = "none",axis.title.x = element_blank(),axis.title.y = element_blank())+
scale_fill_manual(values=c("#AA0000","#2C5AA0"))
# Marginal density plot of y (right panel)
ydensity2 <- axis_canvas(ANEW, axis = "y", coord_flip = TRUE)+
geom_density(data=total, aes(Arousal_Mean_ANEW, fill=Arousal_cutoff),alpha=.5) +
theme(legend.position = "none",axis.title.x = element_blank(),axis.title.y = element_blank())+
coord_flip()+
scale_fill_manual(values=c("#272727","#A4A4A4"))
p1 <- insert_xaxis_grob(ANEW, xdensity2, grid::unit(.2, "null"), position = "top")
p2<- insert_yaxis_grob(p1, ydensity2, grid::unit(.2, "null"), position = "right")
P2 <- ggdraw(p2)
# Preparing data
CorData <- merge(Pav_data,ANEW_data,by="Word")
# assigning new names to columns
names(CorData)[names(CorData) == "Arousal_mean"] <- "Arousal_Mean_Pavlovia"
names(CorData)[names(CorData) == "Valence_mean"] <- "Valence_Mean_Pavlovia"
names(CorData)[names(CorData) == "ValMn"] <- "Valence_Mean_ANEW"
names(CorData)[names(CorData) == "AroMn"] <- "Arousal_Mean_ANEW"
###################################################
# --------- Make data able to visualize --------- #
###################################################
# for arousal data
# select relevant data
Cor_Aro <- as.data.frame(t(select(total,Word,Arousal_Mean_Pavlovia,Arousal_Mean_ANEW)))
# change the format of the dataframe
colnames(Cor_Aro) <- as.character(unlist(Cor_Aro[1,]))
# remove the list row, so that the word is not repeated
Cor_Aro = Cor_Aro[-1, ]
# transform back to dataframe
Cor_Aro <- as.data.frame(t(Cor_Aro))
#make sure all means are in the format x.x (and not x,x)
Cor_Aro$Arousal_Mean_Pavlovia <- as.numeric(sub(",", ".", Cor_Aro$Arousal_Mean_Pavlovia,fixed = TRUE))
Cor_Aro$Arousal_Mean_ANEW <- as.numeric(sub(",", ".",Cor_Aro$Arousal_Mean_ANEW,fixed = TRUE))
# for valence data the process is repeated
Cor_Val <- as.data.frame(t(select(total,Word,Valence_Mean_Pavlovia,Valence_Mean_ANEW)))
colnames(Cor_Val) <- as.character(unlist(Cor_Val[1,]))
Cor_Val = Cor_Val[-1, ]
Cor_Val <- as.data.frame(t(Cor_Val))
Cor_Val$Valence_Mean_Pavlovia <- as.numeric(sub(",", ".",Cor_Val$Valence_Mean_Pavlovia,fixed = TRUE))
Cor_Val$Valence_Mean_ANEW <- as.numeric(sub(",", ".",Cor_Val$Valence_Mean_ANEW,fixed = TRUE))
# Calculating the combined rating for arousal and valence
Cor_Aro$Arousal_Combined <- Cor_Aro$Arousal_Mean_Pavlovia+Cor_Aro$Arousal_Mean_ANEW
Cor_Val$Valence_Combined <- Cor_Val$Valence_Mean_Pavlovia+Cor_Val$Valence_Mean_ANEW
Cor_Arousal<-cor.test(CorData$Arousal_Mean_Pavlovia,CorData$Arousal_Mean_ANEW, method = "spearman", exact=F)
Cor_Arousal
Cor_Valence<-cor.test(CorData$Valence_Mean_Pavlovia,CorData$Valence_Mean_ANEW, method = "spearman", exact=F)
Cor_Valence
P3 <- ggplot(Cor_Aro, aes(x=Arousal_Mean_Pavlovia, y=Arousal_Mean_ANEW,col=Arousal_Combined))+
geom_point(size = 1)+
geom_abline(intercept = 0, slope = 1,colour="red",size=1)+
scale_x_continuous(breaks = c(1,2,3,4,5,6,7,8,9), limits=c(1,9)) +
scale_y_continuous(breaks = c(1,2,3,4,5,6,7,8,9), limits=c(1,9)) +
theme_bw()+
labs(title = "", x = "Mean Arousal Rating: Pavlovia", y = "Mean Arousal Rating: ANEW") +
annotate("text", x = 3, y = 8.5, label = "Spearman Correlation",size=3, fontface="bold")+
annotate("text", x = 3, y = 8, label = "rho = 0.7669351",size=3, fontface="bold") +
annotate("text", x = 3, y = 7.5, label = "P-value = 2.2e-16",size=3, fontface="bold") +
scale_color_gradient(low="#999999", high="#333333")+
theme(legend.position = "none")+
theme(axis.title.x = element_text(size=12, face="bold"),axis.text.x = element_text(face = "bold", size = 12),axis.text.y = element_text(face = "bold", size = 12),axis.title.y = element_text(size=12, face="bold"),panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
P4 <- ggplot(Cor_Val, aes(x=Valence_Mean_Pavlovia, y=Valence_Mean_ANEW,col=Valence_Combined))+
geom_point(size = 1) +
geom_abline(intercept = 0, slope = 1,colour="red",size=1)+
scale_x_continuous(breaks = c(1,2,3,4,5,6,7,8,9), limits=c(1,9)) +
scale_y_continuous(breaks = c(1,2,3,4,5,6,7,8,9), limits=c(1,9)) +
theme_bw()+
labs(title = "",x = "Mean Valence Rating: Pavlovia", y = "Mean Valence Rating: ANEW") +
annotate("text", x = 3, y = 8.5, label = "Spearman Correlation",size=3, fontface="bold")+
annotate("text", x = 3, y = 8, label = "rho = 0.9316756",size=3, fontface="bold") +
annotate("text", x = 3, y = 7.5, label = "P-value = 2.2e-16",size=3, fontface="bold") +
scale_color_gradient(low="#336699", high="#990000")+
theme(legend.position = "none") +
theme(axis.title.x = element_text(size=12, face="bold"),axis.text.x = element_text(face = "bold", size = 12),axis.text.y = element_text(face = "bold", size = 12),axis.title.y = element_text(size=12, face="bold"),panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
#######################################################################
# ------------------- Plot all four plots in one -------------------- #
#######################################################################
plot_grid(P2,P1,P3,P4, labels = c('A. ANEW word ratings', 'B. Pavlovia word ratings','C. Rating Consistency Arousal', 'D. Rating Consistency Valence'), hjust = 0.0,label_size = 16)
